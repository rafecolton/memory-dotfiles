#!/usr/bin/env ruby
# vim:fileencoding=utf-8

require 'spec/spec_helper'
require 'tmpdir'
require 'fileutils'
Dir['spec/*.rb'].each{ |f| require f }

def main(argv = [].freeze)
  MiniTest::Unit.output = Class.new do
    def puts(*args)
      args.each { |arg| announce! arg }
    end

    def announce!(something)
      $stderr.puts "#{GOLD}golden#{RESET}: #{GREEN}#{something}#{RESET}"
    end

    alias print puts
  end.new

  MiniTest::Spec.before do
    @tmp_var = Dir.mktmpdir(['mdf_', '_var'])
    @tmp_bin = Dir.mktmpdir(['mdf_', '_bin'])
    ENV['MDF_VAR_PATH'] = @tmp_var
    ENV['MDF_BIN_PATH'] = @tmp_bin
    ENV['PATH'] = "#{@tmp_bin}:#{ENV['PATH']}"
  end

  MiniTest::Spec.after do
    FileUtils.rm_rf([@tmp_var, @tmp_bin])
  end

  exit_code = MiniTest::Unit.new.run(argv)
  if exit_code == 0
    $stderr.puts BRIGHT_GREEN
    $stderr.puts <<-EOF.gsub(/^ {4}/, '')
      ✓✓      ✓✓ ✓✓✓✓ ✓✓    ✓✓
      ✓✓  ✓✓  ✓✓  ✓✓  ✓✓✓   ✓✓
      ✓✓  ✓✓  ✓✓  ✓✓  ✓✓✓✓  ✓✓
      ✓✓  ✓✓  ✓✓  ✓✓  ✓✓ ✓✓ ✓✓
      ✓✓  ✓✓  ✓✓  ✓✓  ✓✓  ✓✓✓✓
      ✓✓  ✓✓  ✓✓  ✓✓  ✓✓   ✓✓✓
       ✓✓✓  ✓✓✓  ✓✓✓✓ ✓✓    ✓✓
    EOF
    $stderr.puts RESET
  else
    $stderr.puts BRIGHT_RED
    $stderr.puts <<-EOF.gsub(/^ {4}/, '')
      ✘✘✘✘✘✘✘✘    ✘✘✘    ✘✘✘✘ ✘✘
      ✘✘         ✘✘ ✘✘    ✘✘  ✘✘
      ✘✘        ✘✘   ✘✘   ✘✘  ✘✘
      ✘✘✘✘✘✘   ✘✘     ✘✘  ✘✘  ✘✘
      ✘✘       ✘✘✘✘✘✘✘✘✘  ✘✘  ✘✘
      ✘✘       ✘✘     ✘✘  ✘✘  ✘✘
      ✘✘       ✘✘     ✘✘ ✘✘✘✘ ✘✘✘✘✘✘✘✘
    EOF
    $stderr.puts RESET
  end

  exit exit_code
end

if $0 == __FILE__
  exit main(ARGV)
end

# vim:filetype=ruby
